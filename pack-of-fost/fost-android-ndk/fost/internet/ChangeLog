2018-08-31  Kirit Saelensminde  <kirit@felspar.com>
 Allow setting a URL fragment from a jcursor.

2018-08-22  Kirit Saelensminde  <kirit@felspar.com>
 Implement a better URL join that covers many more of the required cases.

2018-08-20  Kirit Saelensminde  <kirit@felspar.com>
 Remove usernames and passwords from URLs.

2018-08-19  Kirit Saelensminde  <kirit@felspar.com>
 Rename `url::anchor` to `url::fragment` as that is the proper term.

2018-07-18  Kirit Saelensminde  <kirit@felspar.com>
 Improve handling of weird ways TCP connections can be dropped and add more logging.

2018-07-02  Kirit Saelensminde  <kirit@felspar.com>
 The HTTP response body doesn't really need to be `const`.

2018-06-11  Kirit Saelensminde  <kirit@felspar.com>
 Add `fost-hod` for handling packet oriented data over TCP.

2018-04-05  Kirit Saelensminde  <kirit@felspar.com>
 No longer make use of Boost regex library.

2017-12-28  Kirit Saelensminde  <kirit@felspar.com>
 Make the `query_string` API a bit less pathalogical by caching the stringified version.

2017-12-13  Kirit Saelensminde  <kirit@felspar.com>
 JSON arrays used as header sub-values are now set as the JSON string.

2017-09-17  Kirit Saelensminde  <kirit@felspar.com>
 Removed all uses of `boost::function`

2017-07-14  Kirit Saelensminde  <kirit@felspar.com>
 Add single quote and dollar symbol to allowed URL path characters.

2017-07-13  Kirit Saelensminde  <kirit@felspar.com>
 The conversion of HTTP request file paths to strings now works for a wider range of inputs. The conversion to `boost::filesystem:;wpath` is problematic with Boost versions prior to 1.64 due to the way they use codecvt.

2017-06-13  Kirit Saelensminde  <kirit@felspar.com>
 Ampersands are allowed characters in the URL file specification.

2017-01-12  Kirit Saelensminde  <kirit@felspar.com>
 Removed the old `parser_lock` which is no longer needed.

2017-01-03  Kirit Saelensminde  <kirit@felspar.com>
 Switch to the new version of Boost Spirit. Drop support for Boost version prior to !.59.

2016-12-16  Kirit Saelensminde  <kirit@felspar.com>
 Add a cookie header parser.

2016-11-26  Kirit Saelensminde  <kirit@felspar.com>
 Replace older Boost code with `std::function` and lambdas.

2016-09-18  Kirit Saelensminde  <kirit@felspar.com>
 Make the remote address properly available on the server HTTP request.

2016-09-14  Kirit Saelensminde  <kirit@felspar.com>
 The HTTP server now adds a header describing the remote address.

2016-09-09  Kirit Saelensminde  <kirit@felspar.com>
 Handle setting MIME headers via JSON.

2016-08-08  Kirit Saelensminde  <kirit@felspar.com>
 Swap a `std::list` for a `std::vector` in the query string interface.

2016-08-07  Kirit Saelensminde  <kirit@felspar.com>
 Fix a bug in the server request so it properly returns a reference to the query string.

2016-07-30  Kirit Saelensminde  <kirit@felspar.com>
 * Allow a `jcursor` to access header sub-values.
 * Allow header content to be created from a JSON object.

2016-07-29  Kirit Saelensminde  <kirit@felspar.com>
 * Allow access to some parts of the server request using a `jcursor`.
 * Drop MIME headers that have an underscore in their names.

2016-07-28  Kirit Saelensminde  <kirit@felspar.com>
 Add shortcut method on HTTP request for getting to the headers.

2015-11-20  Kirit Saelensminde  <kirit@felspar.com>
 Removed use of deprecated Fost APIs.

2015-10-20  Kirit Saelensminde  <kirit@felspar.com>
 Make sure the web server logs an error message when it catches an excepion.

2015-05-10  Kirit Saelensminde  <kirit@felspar.com>
 Remove all uses of auto_ptr. Replace some with move semantics, others with unique_ptr.

2015-05-06  Kirit Saelensminde  <kirit@felspar.com>
 Fixed up the tests to use the new service API on the network connections.

2015-04-30  Kirit Saelensminde  <kirit@felspar.com>
 Changed the way that Boost ASIO IO services are used so that server accept sockets can be serviced totally independantly. This is an ugly workaround for the problem, but does at least cause all requests to be properly serviced.
 Revert the change from 2015-04-24

2015-04-24  Kirit Saelensminde  <kirit@felspar.com>
 Make sure that a server io_service is properly associated with the connection. This also changes client sockets to all share a single io_service.

2015-03-29  Kirit Saelensminde  <kirit@felspar.com>
 Allow apostrophes in the `fostlib::url::filepath_string` strings.

2014-11-26  Kirit Saelensminde  <kirit@felspar.com>
 Allow MIME binary bodies to be made from start/end memory pointers.

2014-11-05  Kirit Saelensminde  <kirit@felspar.com>
 Only set Date and Host headers if they're not already set.

2014-05-31  Kirit Saelensminde  <kirit@felspar.com>
 Be absolutely sure that the URL parser lock is held when the parsers destruct.

2014-05-29  Kirit Saelensminde  <kirit@felspar.com>
 Added ampersand to allowed characters in the file path of a HTTP request on the server.

2014-05-22  Kirit Saelensminde  <kirit@felspar.com>
 Change expected exceptions for some tests because some platforms (i.e. Ubuntu Trusty) don't give socket connect errors, only time out errors when data is sent.

2014-05-19  Kirit Saelensminde  <kirit@felspar.com>
 Change the way that `boost::filesystem::wpath` instances are converted from strings in order to fix a Boost bug on Android.

2014-05-14  Kirit Saelensminde  <kirit@felspar.com>
 No longer throw `not_implemented` exceptions from the low level networking code.
 Fix a bug where an exception wasn't always thrown when errors were reported reading from a socket.

2014-05-13  Kirit Saelensminde  <kirit@felspar.com>
 Include HTTP user agent response constructor useful for tests.

2014-05-11  Kirit Saelensminde  <kirit@felspar.com>
 Allow the MIME headers to be cast to JSON.

2014-05-10  Kirit Saelensminde  <kirit@felspar.com>
Allow a termination lambda to also be passed into the HTTP server to control when to stop it. The lambda is only checked after a connection is opened.

2014-03-04  Kirit Saelensminde  <kirit@felspar.com>
 Hold the parser lock for a much shorter period when parsing a HTTP request to the web server.

2014-03-02  Kirit Saelensminde  <kirit@felspar.com>
 Alter the testing HTTP server request class so it can take a query string and the headers/body are optional.

2014-02-27  Kirit Saelensminde  <kirit@felspar.com>
 The `fostlib::url::query_string` class can now also be used to parse the standard format query string on the server side. The HTTP server query string is also now always a `url::query_string` instance.

2014-02-23  Kirit Saelensminde  <kirit@felspar.com>
 The MIME header names and values need to be retrievable in a case-insensitive manner as not everybody agrees on the correct case.

2014-02-22  Kirit Saelensminde  <kirit@felspar.com>
 Folding of long lines in MIME headers needs to be conditional on the protocol because most MIME protocols use it, but HTTP does not and some web servers don't handle folded lines.

2012-11-09  Kirit Saelensminde  <kirit@felspar.com>
 Allow the SMTP port to be set on the SMTP client and the tests.

2012-08-08  Kirit Saelensminde  <kirit@felspar.com>
 The URL parser (string constructor) now acquires the parser lock. This should help stop Boost Spirit failures.

2012-07-05  Kirit Saelensminde  <kirit@felspar.com>
 Changed some log output for the HTTP server to produce JSON objects rather than an array.

2012-07-03  Kirit Saelensminde  <kirit@felspar.com>
 Support the clang toolset in the compile script.
 Removed some dead code.

2012-04-14  Kirit Saelensminde  <kirit@felspar.com>
 Exposed the HTTP server's status codes as text.

2012-01-30  Kirit Saelensminde  <kirit@felspar.com>
 Extended the set of allowable characters for the file specification and the query string in the HTTP server to include apostrophes.

2012-01-30  Kirit Saelensminde  <kirit@felspar.com>
 Disabled a test that is unreliable on Windows due to its limited network buffer.

2012-01-28  Kirit Saelensminde  <kirit@felspar.com>
 Fixed up some build errors for the new null_ptr.

2012-01-04  Kirit Saelensminde  <kirit@felspar.com>
 Changed one of the networking tests to send less data on Windows as the test would hardly ever pass. It is still a bit unreliable though :(

2011-10-24  Kirit Saelensminde  <kirit@felspar.com>
 Allow a few more characters in the file specification for URLs.

2011-10-22  Kirit Saelensminde  <kirit@felspar.com>
 Improved some of the error handling in the HTTP server.
 Can now convert a URL file specification directly to a string.

2011-10-21  Kirit Saelensminde  <kirit@felspar.com>
 Added coercion from MIME to UTF8 strings.

2011-10-01  Kirit Saelensminde  <kirit@felspar.com>
 We can now coerce from a URL file specification to a Boost filesystem wpath.

2011-09-30  Kirit Saelensminde  <kirit@felspar.com>
 The host constructors now normalise to lower case any host name they are given.
 We can now pass in a handler function to the HTTP server request for use when testing server responses.

2011-08-15  Kirit Saelensminde  <kirit@felspar.com>
 Connection errors now report the host and port they're trying to connect to.
 The pop3 tests now allow the server to be configured, and it is more aggresive in keeping the mailbox empty.
 The pop client includes some extra logging describing what it is doing.
 Made a change to the TCP time out handling to support the version of gcc that Macs use.

2011-07-30  Kirit Saelensminde  <kirit@felspar.com>
 Made some changes to support Boost 1.46.0.

2011-07-22  Kirit Saelensminde  <kirit@felspar.com>
 Fixed a bug that was causing occasional data packets to be lost when sending large blocks of data.

2011-04-13  Kirit Saelensminde  <kirit@felspar.com>
 Implemented a proper exception type for a particular networking error.

2011-04-10  Kirit Saelensminde  <kirit@felspar.com>
 Improved the time out handling for large downloads where the download size is known in advance.
 Added in a connect timeout which defaults to ten seconds.

2011-03-02  Kirit Saelensminde  <kirit@felspar.com>
 Implemented a more full version of the email address parser so it can handle names as well as well as email addresses.

2011-02-11  Kirit Saelensminde  <kirit@felspar.com>
 Fixed a bug that was causing the protocol to be lost when a relative URL was being generated.

2010-12-10  Kirit Saelensminde  <kirit@felspar.com>
 The URL parser now supports (at least some) custom query string formats. Also added in limited %XX decoding in the query string values.

2010-11-16  Kirit Saelensminde  <kirit@felspar.com>
 Added a very simple HTTP PUT based log sink for shipping logs to another machine.

2010-11-04  Kirit Saelensminde  <kirit@felspar.com>
 URLs are now usable directly as keys in STL containers as std::less is supported.

2010-10-15  Kirit Saelensminde  <kirit@felspar.com>
 FOST authentication for the server version of requests is now supported.

2010-10-08  Kirit Saelensminde  <kirit@felspar.com>
 fostlib::email_address instances can now be coerced from their JSON representation.
 A new attach member on fostlib::mime_envelope allows for easier addition of mime types into the envelope.
 The MIME type for MIME envelopes can now be set and the iterator for the data is now implemented.
 The SMTP client now tracks its state and doesn't try to close the connection if it's not in a proper idle state.

2010-09-24  Kirit Saelensminde  <kirit@felspar.com>
 Errors connecting to sockets are now reported as instances of fostlib::exceptions::connect_failure. Socket errors are now all sub-classes of fostlib::exceptions::socket_error. Reads now also time out and throw a fostlib::exceptions::read_timout exception. The configuration setting
     [Network settings]
     Read time out=30
 sets the number of seconds that the read time out value should have.

2010-09-19  Kirit Saelensminde  <kirit@felspar.com>
 fostlib::url::query_string objects can now be coerced from fostlib::string objects.

2010-06-02  Kirit Saelensminde  <kirit@felspar.com>
 Fost authentication
 - Fixed the signature so that it signs the query string when there is
   no post data.

2010-05-31  Kirit Saelensminde  <kirit@felspar.com>
 Fost authentication
 - Added a utility function to add the authentication to a user agent.

2010-05-30  Kirit Saelensminde  <kirit@felspar.com>
 Host
 - A host can now be configured with a port number as the service.

2010-04-28  Kirit Saelensminde  <kirit@felspar.com>
 Web server
 - Added the 207 response code
 - URLs may contain bangs (!)

2010-04-06  Kirit Saelensminde  <kirit@felspar.com>
 Parsers
 - Removed the parser instances because they're not thread safe.
 MIME
 - Added support for multiple headers of the same name.
 HTTP client
 - Corrected behaviour for 304 responses.

2010-04-05  Kirit Saelensminde  <kirit@felspar.com>
 URL
 - The query string can now be any sequence rather than only a map of
 - key/value pairs.
 HTTP client/server
 - Added more allowable characters to the resource parser for HTTP requests.
 - The server request now supports handling of bad requests.
 - The HTTP client post and put short cuts now accept all data types
   supported by the request.
 - Changed the type of the server request query string to match that of the
   URL.
 - The parsing of the beginning of the HTTP request by the server is now
   protected by a mutex because Boost.Spirit is not thread safe.
 Host
 - Added JSON coercions for fostlib::host.

2010-04-02  Kirit Saelensminde  <kirit@felspar.com>
 URL
 - The host and port number are now mutable fields of the URL.
 - Fixed a bug where port numbers weren't properly shown in URLs converted
   to strings.
 - Query string values may now contain forward slashes and colons.
 - Fixed a bug where query strings were being thrown away when URLs were
   parsed.
 HTTP client/server
 - The response body can now be detached from the client response as can the
   request body from the server.
 - The HTTP server now accepts additional verbs, more correct resource paths
   and can return all status codes supported by HTTP 1.1.

2010-04-01  Kirit Saelensminde  <kirit@felspar.com>
 TCP/IP
 - Most errors should now end up with a fostlib::exceptions::exception which
   allows the error to be annotated.
 HTTP client
 - Fixed a bug in chunked encoding that was causing the chunks to end up
   in the data block in the reverse order.
 - The user agent request can now be built from passed in MIME data.
 POP3 client
 - Improved the error reporting by annotating exceptions in as many places
   as possible.

2010-03-26  Kirit Saelensminde  <kirit@felspar.com>
 fget example
 - Now supports the use of FOST authentication through the -authentication,
   -key and -secret command line switches. There's also a -user switch to
   handle authentication where the REST end point supports impersonation.

2010-03-25  Kirit Saelensminde  <kirit@felspar.com>
 MIME
 - Improved handling of headers that don't have values.

2010-03-22  Kirit Saelensminde  <kirit@felspar.com>
 User agent
 - The fget example now allows us to save to a file by using an extra
   parameter.
 - There is a new MIME type binary_body for handling in-memory binary MIME
   data.

2010-03-22  Kirit Saelensminde  <kirit@felspar.com>
 Header files
 - Moved all non-private headers out of include/fost/detail
 ChangeLog
 - Added ChangeLog
